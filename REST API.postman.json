{
	"info": {
		"_postman_id": "32ffa1a7-0d3e-4d5e-b406-89fea1d23fcb",
		"name": "REST API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18783976"
	},
	"item": [
		{
			"name": "API Status",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\",  () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Body title matches\",() => {\r",
							"  pm.expect(pm.response.text()).to.include(\"GraphQL and REST API for Testing and Prototyping | GO REST\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{APIStatusURL}}",
					"host": [
						"{{APIStatusURL}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a new user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\",  () => {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"pm.test(\"Create user successfull\", function () {\r",
							"    pm.response.to.have.status(\"Created\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": " {\r\n  \"name\":\"TestPostman\",\r\n  \"gender\":\"male\", \r\n  \"email\":\"yyyryt@email.com\", \r\n  \"status\":\"active\"\r\n  }\r\n  ",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}",
					"host": [
						"{{URL}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all users details",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get users details\",  () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}",
					"host": [
						"{{URL}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get user by name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get user by name\",  () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body contains string  name \",() => {\r",
							"  pm.expect(pm.response.text()).to.include(\"name\");\r",
							"});\r",
							"\r",
							"pm.test(\"Find user with name: TestPostman\", () => {\r",
							"  const responseJson = pm.response.json();\r",
							"  pm.expect(pm.response.text()).to.include(\"TestPostman\");\r",
							"  \r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}?name={{name}}",
					"host": [
						"{{URL}}"
					],
					"query": [
						{
							"key": "name",
							"value": "{{name}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get user details by Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\",  () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.sendRequest(\"https://gorest.co.in//public/v2/users\", function (err, response) {\r",
							"    if (err) {\r",
							"        console.log(err);\r",
							"    } else {\r",
							"        var jsonData = response.json();\r",
							"        console.log(\"jsonData: \" + jsonData);\r",
							"        var targetName = \"Aagam Pothuvaal IV\"; // Add user name\r",
							"        var targetId;\r",
							"\r",
							"var targetUser = jsonData.find(user => user.name === targetName);\r",
							"if (targetUser) {\r",
							"    targetId = targetUser.id;\r",
							"    console.log(\"ID for user \" + targetName + \": \" + targetId);\r",
							"    pm.environment.set(\"targetId\", targetId);\r",
							"} else {\r",
							"    console.log(\"User with name \" + targetName + \" not found.\");\r",
							"}\r",
							"        \r",
							"\r",
							"      \r",
							"    }\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/{{targetId}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"{{targetId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update user details",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Update user details\",  () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n            \r\n            \"name\": \"SomeNewUserName\",\r\n            \"email\": \"newEmail@gmail.com\",\r\n            \"gender\": \"male\",\r\n            \"status\": \"active\"\r\n        }\r\n    ",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/{{targetId}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"{{targetId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete user by Id",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Delete user\",  () => {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{URL}}/{{targetId}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"{{targetId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get user by Id after deleted",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404 user has been deleted\",  () => {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/{{targetId}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"{{targetId}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "oauth2"
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "URL",
			"value": "https://gorest.co.in/public/v2/users"
		},
		{
			"key": "APIStatusURL",
			"value": "https://gorest.co.in/"
		}
	]
}